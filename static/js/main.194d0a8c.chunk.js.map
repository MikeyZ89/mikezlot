{"version":3,"sources":["assets/img/team/MZ.jpg","assets/img/team/AK.jpg","assets/img/logos/theshblue.png","components/Header.jsx","components/Publications.jsx","components/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","src","THESH","alt","publicationLinks","id","map","index","image","title","caption","instagram","contact","data-toggle","href","MyForm","props","submitForm","bind","state","status","name","action","method","noValidate","type","placeholder","required","data-validation-required-message","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","reset","setState","send","React","Component","App","P1","P2","Publications","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.194d0a8c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/MZ.b190f694.jpg\";","export default __webpack_public_path__ + \"static/media/AK.c23f1385.jpg\";","export default __webpack_public_path__ + \"static/media/theshblue.5748e507.png\";","import React from \"react\";\nimport \"../App.css\";\nimport THESH from \"../assets/img/logos/theshblue.png\";\n\nfunction Header() {\n  return (\n    <header className=\"masthead\">\n      <div className=\"container\">\n        <div className=\"intro-text\">\n          \n          <img className=\"LOGO\" src={THESH} alt={THESH} />\n          {/* <br></br>\n          <div className=\"intro-lead-in\">ALBUM COMING SOON</div>\n          \n          <div className=\"intro-heading text-uppercase\">THESH</div>\n          <a\n            className=\"btn btn-primary btn-xl text-uppercase js-scroll-trigger\"\n            href=\"#services\"\n          >\n            BUY NOW!\n          </a> */}\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react'\n\nexport default ({ publicationLinks }) => {\n    return (\n        <section className=\"bg-gray page-section\" id=\"portfolio\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-12 text-center\">\n              <h2 className=\"section-heading text-uppercase\">ORIGINAL MUSIC</h2>\n              <h3 className=\"section-subheading text-muted\">Written and Performed By:</h3>\n            </div>\n          </div>\n          <div className=\"row\">\n            {\n                publicationLinks && publicationLinks.map(({ image, title, caption , instagram, contact}, index) => \n                    <div className=\"col-md-6 col-sm-6 portfolio-item\">\n                        <a className=\"portfolio-link\" data-toggle=\"modal\" href={ contact }>\n                            <div className=\"portfolio-hover\">\n                                <div className=\"portfolio-hover-content\">\n                                </div>\n                            </div>\n                            <img className=\"img-fluid\" src={ image } alt={ image } />\n                        </a>\n                        <div className=\"portfolio-caption\">\n                            <h4>{ title }</h4>\n                            <p className=\"text-muted\">{ caption }</p>\n                        </div>\n                        <ul className=\"list-inline social-buttons\">\n                          <li className=\"list-inline-item\">\n                            <a href= { instagram }> \n                              <i className=\"fa fa-instagram\"></i>\n                            </a>\n                          </li>\n                          <li className=\"list-inline-item\">\n                            <a href= { contact }> \n                              <i className=\"fa fa-id-badge text-white\"></i>\n                            </a>\n                          </li>\n                        </ul>\n                    </div>\n                )\n            }\n          </div>\n        </div>\n      </section>\n    )\n}","import React from \"react\";\n// import axios from \"axios\";\nimport \"../App.css\";\n\nexport default class MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {\n      status: \"\",\n    };\n  }\n\n  render() {\n    // const { status } = this.state;\n    return (\n      <section className=\"page-section\" id=\"contact\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-12 text-center\">\n            <h1 className=\"section-heading text-uppercase\">Contact</h1>\n            <br></br>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-lg-12\">\n            <form\n              id=\"contactForm\"\n              name=\"sentMessage\"\n              action=\"https://formspree.io/f/xaylorpg\"\n              method=\"POST\"\n              noValidate=\"noValidate\"\n            >\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <div className=\"form-group\">\n                    <input\n                      className=\"form-control\"\n                      name=\"name\"\n                      id=\"name\"\n                      type=\"text\"\n                      placeholder=\"Your Name *\"\n                      required=\"required\"\n                      data-validation-required-message=\"Please enter your name.\"\n                    />\n                    <p className=\"help-block text-danger\"></p>\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      className=\"form-control\"\n                      name=\"email\"\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"Your Email *\"\n                      required=\"required\"\n                      data-validation-required-message=\"Please enter your email address.\"\n                    />\n                    <p className=\"help-block text-danger\"></p>\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      className=\"form-control\"\n                      name=\"phone\"\n                      id=\"phone\"\n                      type=\"tel\"\n                      placeholder=\"Your Phone *\"\n                      required=\"required\"\n                      data-validation-required-message=\"Please enter your phone number.\"\n                    />\n                    <p className=\"help-block text-danger\"></p>\n                  </div>\n                </div>\n                <div className=\"col-md-6\">\n                  <div className=\"form-group\">\n                    <textarea\n                      className=\"form-control\"\n                      id=\"message\"\n                      name=\"message\"\n                      placeholder=\"Your Message *\"\n                      required=\"required\"\n                      data-validation-required-message=\"Please enter a message.\"\n                    ></textarea>\n                    <p className=\"help-block text-danger\"></p>\n                  </div>\n                </div>\n                <div className=\"clearfix\"></div>\n                <div className=\"col-lg-12 text-center\">\n                  <div id=\"success\"></div>\n                  <button\n                    id=\"sendMessageButton\"\n                    className=\"btn btn-primary btn-xl text-uppercase\"\n                    type=\"submit\"\n                  >\n                    Send Message\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n\n    </section>\n    );\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport P1 from \"../src/assets/img/team/MZ.jpg\";\nimport P2 from \"../src/assets/img/team/AK.jpg\";\nimport Header from \"./components/Header\";\nimport Publications from \"./components/Publications\";\nimport Contact from \"./components/Contact\";\n\nfunction App() {\n  const publicationLinks = [\n    {\n      image: P1,\n      title: \"Mikey Zlotkowski\",\n      caption: \"Singer-Songwriter/Guitarist\",\n      instagram: \"https://www.instagram.com/thesh_mikey/\",\n      contact: \"https://www.tappy.tech/mikez\",\n    },\n    {\n      image: P2,\n      title: \"Andrew Keiser\",\n      caption: \"Producer/Drummer\",\n      instagram: \"https://www.instagram.com/andrewkeiser_/\",\n      contact: \"https://www.tappy.tech/AK15366\",\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Publications publicationLinks={publicationLinks}></Publications>\n      <Contact />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './assets/css/bootstrap.min.css';\nimport './assets/css/agency.min.css';\nimport './assets/css/header.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}